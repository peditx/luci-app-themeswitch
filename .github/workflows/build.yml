name: "Build IPK for Multiple Architectures"
on:
  repository_dispatch:
  workflow_dispatch: {}
  push:
    branches:
      - 'main'
    paths:
      - 'luci-app-themeswitch/Makefile'
env:
  TZ: Asia/Tehran

jobs:
  job_build:
    name: Build OpenWRT
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: 
        include:
          - platform: x86_64
            url_sdk: https://downloads.openwrt.org/releases/23.05.5/targets/x86/64/openwrt-sdk-23.05.5-x86-64_gcc-12.3.0_musl.Linux-x86_64.tar.xz

          - platform: aarch64_generic
            url_sdk: https://downloads.openwrt.org/releases/23.05.5/targets/rockchip/armv8/openwrt-sdk-23.05.5-rockchip-armv8_gcc-12.3.0_musl.Linux-x86_64.tar.xz

          - platform: aarch64_cortex-a53
            url_sdk: https://downloads.openwrt.org/releases/23.05.5/targets/mvebu/cortexa53/openwrt-sdk-23.05.5-mvebu-cortexa53_gcc-12.3.0_musl.Linux-x86_64.tar.xz

          - platform: aarch64_cortex-a72
            url_sdk: https://downloads.openwrt.org/releases/23.05.5/targets/mvebu/cortexa72/openwrt-sdk-23.05.5-mvebu-cortexa72_gcc-12.3.0_musl.Linux-x86_64.tar.xz

          - platform: arm_cortex-a5_vfpv4
            url_sdk: https://downloads.openwrt.org/releases/23.05.5/targets/at91/sama5/openwrt-sdk-23.05.5-at91-sama5_gcc-12.3.0_musl_eabi.Linux-x86_64.tar.xz

          - platform: arm_cortex-a7
            url_sdk: https://downloads.openwrt.org/releases/23.05.5/targets/mediatek/mt7629/openwrt-sdk-23.05.5-mediatek-mt7629_gcc-12.3.0_musl_eabi.Linux-x86_64.tar.xz

          - platform: arm_cortex-a7_neon-vfpv4
            url_sdk: https://downloads.openwrt.org/releases/23.05.5/targets/sunxi/cortexa7/openwrt-sdk-23.05.5-sunxi-cortexa7_gcc-12.3.0_musl_eabi.Linux-x86_64.tar.xz

          - platform: arm_cortex-a8_vfpv3
            url_sdk: https://downloads.openwrt.org/releases/23.05.5/targets/sunxi/cortexa8/openwrt-sdk-23.05.5-sunxi-cortexa8_gcc-12.3.0_musl_eabi.Linux-x86_64.tar.xz

          - platform: arm_cortex-a9
            url_sdk: https://downloads.openwrt.org/releases/23.05.5/targets/bcm53xx/generic/openwrt-sdk-23.05.5-bcm53xx-generic_gcc-12.3.0_musl_eabi.Linux-x86_64.tar.xz

          - platform: arm_cortex-a9_neon
            url_sdk: https://downloads.openwrt.org/releases/23.05.5/targets/zynq/generic/openwrt-sdk-23.05.5-zynq-generic_gcc-12.3.0_musl_eabi.Linux-x86_64.tar.xz

          - platform: arm_cortex-a9_vfpv3-d16
            url_sdk: https://downloads.openwrt.org/releases/23.05.5/targets/mvebu/cortexa9/openwrt-sdk-23.05.5-mvebu-cortexa9_gcc-12.3.0_musl_eabi.Linux-x86_64.tar.xz

          - platform: arm_cortex-a15_neon-vfpv4
            url_sdk: https://downloads.openwrt.org/releases/23.05.5/targets/ipq806x/generic/openwrt-sdk-23.05.5-ipq806x-generic_gcc-12.3.0_musl_eabi.Linux-x86_64.tar.xz

          - platform: mips_24kc
            url_sdk: https://downloads.openwrt.org/releases/23.05.5/targets/ath79/generic/openwrt-sdk-23.05.5-ath79-generic_gcc-12.3.0_musl.Linux-x86_64.tar.xz

          - platform: mips_4kec
            url_sdk: https://downloads.openwrt.org/releases/23.05.5/targets/realtek/rtl838x/openwrt-sdk-23.05.5-realtek-rtl838x_gcc-12.3.0_musl.Linux-x86_64.tar.xz

          - platform: mips_mips32
            url_sdk: https://downloads.openwrt.org/releases/23.05.5/targets/bcm63xx/generic/openwrt-sdk-23.05.5-bcm63xx-generic_gcc-12.3.0_musl.Linux-x86_64.tar.xz

          - platform: mipsel_24kc
            url_sdk: https://downloads.openwrt.org/releases/23.05.5/targets/ramips/rt288x/openwrt-sdk-23.05.5-ramips-rt288x_gcc-12.3.0_musl.Linux-x86_64.tar.xz

          - platform: mipsel_74kc
            url_sdk: https://downloads.openwrt.org/releases/23.05.5/targets/ramips/rt3883/openwrt-sdk-23.05.5-ramips-rt3883_gcc-12.3.0_musl.Linux-x86_64.tar.xz

          - platform: mipsel_mips32
            url_sdk: https://downloads.openwrt.org/releases/23.05.5/targets/bcm47xx/generic/openwrt-sdk-23.05.5-bcm47xx-generic_gcc-12.3.0_musl.Linux-x86_64.tar.xz

   steps:
      - name: Checkout
        uses: actions/checkout@main
        with:
          fetch-depth: 0
          ref: 'main'

      - name: Install packages
        run: |
          echo "Install packages"
          sudo -E apt-get -qq update
          sudo -E apt-get -qq install build-essential clang flex bison g++ gawk gcc-multilib g++-multilib gettext git libncurses5-dev libssl-dev python3 python3-venv rsync unzip zlib1g-dev file wget
          sudo -E apt-get -qq autoremove --purge
          sudo -E apt-get -qq clean

      - name: Cache openwrt SDK
        id: cache-sdk
        uses: actions/cache@v3
        with:
          path: sdk
          key: openwrt-sdk-21.02.0-${{ matrix.arch }}

      - name: Initialization environment
        if: steps.cache-sdk.outputs.cache-hit != 'true'
        env:
          url_sdk: ${{ matrix.url_sdk }}
        run: |
          wget ${{ env.url_sdk }}
          file_name=$(echo ${{env.url_sdk}} | awk -F/ '{print $NF}')
          mkdir sdk && tar -xJf $file_name -C ./sdk --strip-components=1
          cd sdk  
          echo "src-git base https://github.com/openwrt/openwrt.git;openwrt-${{ matrix.sdk_ver }}" > feeds.conf
          echo "src-git packages https://github.com/openwrt/packages.git;openwrt-${{ matrix.sdk_ver }}" >> feeds.conf
          echo "src-git luci https://github.com/openwrt/luci.git;openwrt-${{ matrix.luci_ver }}" >> feeds.conf
          echo "src-git routing https://git.openwrt.org/feed/routing.git;openwrt-${{ matrix.sdk_ver }}"  >> feeds.conf
          git clone -b main https://github.com/${{ github.repository }}.git package/downloads/luci-app-themeswitch
          ./scripts/feeds update -a
          echo "CONFIG_PACKAGE_luci-app-themeswitch=m" > .config
          echo "CONFIG_LUCI_JSMIN=n" >> .config
          echo "CONFIG_LUCI_CSSTIDY=n" >> .config
          ./scripts/feeds install -d n luci-app-themeswitch
          make download -j8

      - name: Configure IPK
        run: |
          cd sdk
          ./scripts/feeds install luci-app-themeswitch
          echo "CONFIG_ALL_NONSHARED=n" > .config
          echo "CONFIG_ALL_KMODS=n" >> .config
          echo "CONFIG_ALL=n" >> .config
          echo "CONFIG_AUTOREMOVE=n" >> .config
          echo "CONFIG_LUCI_LANG_zh_Hans=n" >> .config
          echo "CONFIG_LUCI_JSMIN=n" >> .config
          echo "CONFIG_LUCI_CSSTIDY=n" >> .config
          echo "CONFIG_PACKAGE_luci-app-themeswitch=m" >> .config
          make defconfig

      - name: Compile IPK
        id: compile
        run: |
          cd sdk
          echo "make package/luci-app-themeswitch/{clean,compile} -j$(nproc)"
          make package/luci-app-themeswitch/{clean,compile} -j$(nproc)
          mv bin/packages/${{ matrix.arch }}/base/ ../
          rm .config .config.old
          cd ..
          echo "status=success" >> $GITHUB_OUTPUT
          echo "FIRMWARE=$PWD" >> $GITHUB_ENV

      - name: Upload IPK to release
        uses: softprops/action-gh-release@v1
        if: steps.compile.outputs.status == 'success'
        env:
          GITHUB_TOKEN: ${{ secrets.MY_GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.run_id }}  # Use the run ID instead of date
          files: ${{ env.FIRMWARE }}/base/luci-app-*.ipk
