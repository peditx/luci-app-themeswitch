name: Build and Release

on:
  workflow_dispatch:

jobs:
  build-and-release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker and build for all architectures
        run: |
          architectures=(
            x86_64
            arm_cortex-a7
            arm_cortex-a53
            arm_cortex-a72
            mips_24kc
            mipsel_24kc
            powerpc_8540
            arm_cortex-a9
            arm_xscale
            i386_pentium4
            mips_mips32
            mipsel_mips32
            powerpc_464fp
            arm_cortex-a15_neon-vfpv4
            arm_cortex-a8
            aarch64_cortex-a53
            aarch64_cortex-a72
            aarch64_generic
          )

          for arch in "${architectures[@]}"; do
            echo "Building for $arch..."

            # دانلود OpenWrt SDK برای معماری مورد نظر
            wget https://downloads.openwrt.org/releases/22.03.5/targets/${arch}/generic/openwrt-sdk-22.03.5-${arch}_generic.Linux-x86_64.tar.xz -O sdk.tar.xz
            mkdir -p sdk
            tar -xf sdk.tar.xz -C sdk --strip-components=1

            # اجرای کامپایل داخل داکر
            docker run --rm -v "$(pwd)/sdk":/build ghcr.io/openwrt/sdk:$arch-22.03.5 bash -c "
              cd /build &&
              ./scripts/feeds update -a &&
              ./scripts/feeds install luci-base &&
              make package/luci-app-themeswitch/compile"
          done

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: all-builds
          path: sdk/bin/packages/*/base/*.ipk

      - name: Create release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.MY_GITHUB_TOKEN }}
        with:
          tag_name: 'release-$(date +%Y%m%d)'
          release_name: 'Release $(date +%Y-%m-%d)'
          draft: false
          prerelease: false
          files: sdk/bin/packages/*/base/*.ipk
