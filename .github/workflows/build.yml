name: "Build IPK"
on:
  repository_dispatch:
  workflow_dispatch: {}
  push:
    branches:
      - 'main'
    paths:
      - 'luci-app-themeswitch/Makefile'

env:
  TZ: Asia/Tehran

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        architecture: [x86_64, aarch64_generic, aarch64_cortex-a53, aarch64_cortex-a72, arm_cortex-a5_vfpv4, arm_cortex-a7, arm_cortex-a7_neon-vfpv4, arm_cortex-a8_vfpv3, arm_cortex-a9, arm_cortex-a9_neon, arm_cortex-a9_vfpv3-d16, arm_cortex-a15_neon-vfpv4, mips_24kc, mips_4kec, mips_mips32, mipsel_24kc, mipsel_74kc, mipsel_mips32]
        sdk_urls:
          x86_64: "https://downloads.openwrt.org/releases/21.02.0/targets/x86/64/openwrt-21.02.0-x86-64-generic-squashfs.img.gz"
          aarch64_generic: "https://downloads.openwrt.org/releases/21.02.0/targets/aarch64/generic/openwrt-21.02.0-aarch64-generic-squashfs.img.gz"
          aarch64_cortex-a53: "https://downloads.openwrt.org/releases/21.02.0/targets/aarch64/cortex-a53/openwrt-21.02.0-aarch64-cortex-a53-squashfs.img.gz"
          aarch64_cortex-a72: "https://downloads.openwrt.org/releases/21.02.0/targets/aarch64/cortex-a72/openwrt-21.02.0-aarch64-cortex-a72-squashfs.img.gz"
          arm_cortex-a5_vfpv4: "https://downloads.openwrt.org/releases/21.02.0/targets/arm_cortex-a5_vfpv4/openwrt-21.02.0-arm_cortex-a5_vfpv4-squashfs.img.gz"
          arm_cortex-a7: "https://downloads.openwrt.org/releases/21.02.0/targets/arm_cortex-a7/openwrt-21.02.0-arm_cortex-a7-squashfs.img.gz"
          arm_cortex-a7_neon-vfpv4: "https://downloads.openwrt.org/releases/21.02.0/targets/arm_cortex-a7_neon-vfpv4/openwrt-21.02.0-arm_cortex-a7_neon-vfpv4-squashfs.img.gz"
          arm_cortex-a8_vfpv3: "https://downloads.openwrt.org/releases/21.02.0/targets/arm_cortex-a8_vfpv3/openwrt-21.02.0-arm_cortex-a8_vfpv3-squashfs.img.gz"
          arm_cortex-a9: "https://downloads.openwrt.org/releases/21.02.0/targets/arm_cortex-a9/openwrt-21.02.0-arm_cortex-a9-squashfs.img.gz"
          arm_cortex-a9_neon: "https://downloads.openwrt.org/releases/21.02.0/targets/arm_cortex-a9_neon/openwrt-21.02.0-arm_cortex-a9_neon-squashfs.img.gz"
          arm_cortex-a9_vfpv3-d16: "https://downloads.openwrt.org/releases/21.02.0/targets/arm_cortex-a9_vfpv3-d16/openwrt-21.02.0-arm_cortex-a9_vfpv3-d16-squashfs.img.gz"
          arm_cortex-a15_neon-vfpv4: "https://downloads.openwrt.org/releases/21.02.0/targets/arm_cortex-a15_neon-vfpv4/openwrt-21.02.0-arm_cortex-a15_neon-vfpv4-squashfs.img.gz"
          mips_24kc: "https://downloads.openwrt.org/releases/21.02.0/targets/mips/24kc/openwrt-21.02.0-mips-24kc-squashfs.img.gz"
          mips_4kec: "https://downloads.openwrt.org/releases/21.02.0/targets/mips/4kec/openwrt-21.02.0-mips-4kec-squashfs.img.gz"
          mips_mips32: "https://downloads.openwrt.org/releases/21.02.0/targets/mips/mips32/openwrt-21.02.0-mips-mips32-squashfs.img.gz"
          mipsel_24kc: "https://downloads.openwrt.org/releases/21.02.0/targets/mipsel/24kc/openwrt-21.02.0-mipsel-24kc-squashfs.img.gz"
          mipsel_74kc: "https://downloads.openwrt.org/releases/21.02.0/targets/mipsel/74kc/openwrt-21.02.0-mipsel-74kc-squashfs.img.gz"
          mipsel_mips32: "https://downloads.openwrt.org/releases/21.02.0/targets/mipsel/mips32/openwrt-21.02.0-mipsel-mips32-squashfs.img.gz"

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup SDK
        run: |
          mkdir -p sdk
          cd sdk
          # Use the correct URL based on architecture
          SDK_URL="${{ matrix.sdk_urls[matrix.architecture] }}"
          curl -fsSL -o sdk.tar.xz $SDK_URL
          tar -xf sdk.tar.xz
          rm sdk.tar.xz
          cd ..

      - name: Install packages
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential clang flex bison g++ gawk gcc-multilib g++-multilib gettext git libncurses-dev libssl-dev python3-distutils python3-setuptools rsync swig unzip zlib1g-dev file wget

      - name: Configure IPK
        run: |
          cd sdk
          ./scripts/feeds install luci-app-themeswitch
          echo "CONFIG_ALL_NONSHARED=n" > .config
          echo "CONFIG_ALL_KMODS=n" >> .config
          echo "CONFIG_ALL=n" >> .config
          echo "CONFIG_AUTOREMOVE=n" >> .config
          echo "CONFIG_LUCI_LANG_zh_Hans=n" >> .config
          echo "CONFIG_LUCI_JSMIN=n" >> .config
          echo "CONFIG_LUCI_CSSTIDY=n" >> .config
          echo "CONFIG_PACKAGE_luci-app-themeswitch=m" >> .config
          make defconfig

      - name: Compile IPK
        id: compile
        run: |
          cd sdk
          echo "make package/luci-app-themeswitch/{clean,compile} -j$(nproc)"
          make package/luci-app-themeswitch/{clean,compile} -j$(nproc)
          mv bin/packages/${{ matrix.architecture }}/base/ ../
          rm .config .config.old
          cd ..
          echo "status=success" >> $GITHUB_OUTPUT
          echo "FIRMWARE=$PWD" >> $GITHUB_ENV

      - name: Upload IPK to release
        uses: softprops/action-gh-release@v1
        if: steps.compile.outputs.status == 'success'
        env:
          GITHUB_TOKEN: ${{ secrets.MY_GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.run_id }}  # Use the run ID instead of date
          files: ${{ env.FIRMWARE }}/base/luci-app-*.ipk
