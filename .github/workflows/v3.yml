name: "Build IPK"
on:
  repository_dispatch:
  workflow_dispatch: {}
  push:
    branches:
      - 'main'
    paths:
      - 'luci-app-themeswitch/Makefile'
env:
  TZ: Asia/Tehran

jobs:
  job_build:
    name: Build OpenWRT
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@main
        with:
          fetch-depth: 0
          ref: 'main'

      - name: Install packages
        run: |
          echo "Install packages"
          sudo -E apt-get -qq update
          sudo -E apt-get -qq install build-essential clang flex bison g++ gawk gcc-multilib g++-multilib gettext git libncurses5-dev libssl-dev python3 python3-venv rsync unzip zlib1g-dev file wget
          sudo -E apt-get -qq autoremove --purge
          sudo -E apt-get -qq clean

      - name: Cache openwrt SDK
        id: cache-sdk
        uses: actions/cache@v3
        with:
          path: sdk
          key: openwrt-sdk-23.05-x86-64

      - name: Initialization environment
        if: steps.cache-sdk.outputs.cache-hit != 'true'
        env:
          url_sdk: https://archive.openwrt.org/releases/23.05.2/targets/x86/64/openwrt-sdk-23.05.2-x86-64_gcc-12.3.0_musl.Linux-x86_64.tar.xz
        run: |
          wget ${{ env.url_sdk }}
          file_name=$(echo ${{env.url_sdk}} | awk -F/ '{print $NF}')
          mkdir sdk && tar -xJf $file_name -C ./sdk --strip-components=1
          cd sdk  
          echo "src-git base https://github.com/openwrt/openwrt.git;openwrt-23.05" > feeds.conf
          echo "src-git-full packages https://github.com/openwrt/packages.git;openwrt-23.05" >> feeds.conf
          echo "src-git-full luci https://git.openwrt.org/project/luci.git;openwrt-23.05" >> feeds.conf
          echo "src-git-full routing https://git.openwrt.org/feed/routing.git;openwrt-23.05"  >> feeds.conf
          git clone -b main https://github.com/${{ github.repository }}.git package/downloads/luci-app-themeswitch
          ./scripts/feeds update -a
          echo "CONFIG_PACKAGE_luci-app-themeswitch=m" > .config
          echo "CONFIG_LUCI_JSMIN=n" >> .config
          echo "CONFIG_LUCI_CSSTIDY=n" >> .config
          ./scripts/feeds install -d n luci-app-themeswitch
          make download -j8

      - name: Configure IPK
        run: |
          cd sdk
          ./scripts/feeds install luci-app-themeswitch
          echo "CONFIG_ALL_NONSHARED=n" > .config
          echo "CONFIG_ALL_KMODS=n" >> .config
          echo "CONFIG_ALL=n" >> .config
          echo "CONFIG_AUTOREMOVE=n" >> .config
          echo "CONFIG_LUCI_LANG_zh_Hans=n" >> .config
          echo "CONFIG_LUCI_JSMIN=n" >> .config
          echo "CONFIG_LUCI_CSSTIDY=n" >> .config
          echo "CONFIG_PACKAGE_luci-app-themeswitch=m" >> .config
          make defconfig

      - name: Compile IPK
        id: compile
        run: |
          cd sdk
          echo "make package/luci-app-themeswitch/{clean,compile} -j$(nproc)"
          make package/luci-app-themeswitch/{clean,compile} -j$(nproc)
          mv bin/packages/x86_64/base/ ../
          rm .config .config.old
          cd ..
          echo "status=success" >> $GITHUB_OUTPUT
          echo "FIRMWARE=$PWD" >> $GITHUB_ENV

      - name: Upload IPK to release
        uses: softprops/action-gh-release@v1
        if: steps.compile.outputs.status == 'success'
        env:
          GITHUB_TOKEN: ${{ secrets.MY_GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.run_id }}  # Use the run ID instead of date
          files: ${{ env.FIRMWARE }}/base/luci-app-*.ipk
